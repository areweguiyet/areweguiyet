{
  "OrbTk": {
    "crates_io": "https://crates.io/crates/OrbTk",
    "repo": "https://github.com/redox-os/orbtk",
    "description": "The Orbital Widget Toolkit is a multi platform (G)UI toolkit for building scalable user interfaces with the programming language Rust. It's based on the Entity Component System Pattern and provides a functional-reactive API.",
    "docs": "https://docs.rs/orbtk",
    "tags": []
  },
  "Iced": {
    "crates_io": "https://crates.io/crates/Iced",
    "repo": "https://github.com/hecrj/iced",
    "description": "A renderer-agnostic GUI library for Rust focused on simplicity and type-safety. Inspired by Elm.",
    "docs": "https://docs.rs/iced",
    "tags": []
  },
  "rust-qt-binding-generator": {
    "crates_io": "https://crates.io/crates/rust-qt-binding-generator",
    "repo": "https://anongit.kde.org/rust-qt-binding-generator",
    "description": "Generate code to build Qt applications with Rust",
    "docs": "https://phabricator.kde.org/source/rust-qt-binding-generator/",
    "tags": [
      "Bindings",
      "Qt",
      "QML"
    ]
  },
  "Azul": {
    "crates_io": "https://crates.io/crates/Azul",
    "repo": "https://github.com/maps4print/azul",
    "description": "    Azul GUI is a free, functional, MVVM-oriented GUI framework\n    for rapid development of desktop applications written in Rust,\n    supported by the Mozilla WebRender rendering engine\n",
    "docs": "https://docs.rs/azul",
    "tags": [
      "WebRender"
    ]
  },
  "druid": {
    "crates_io": "https://crates.io/crates/druid",
    "repo": "https://github.com/xi-editor/druid",
    "description": "Druid is a new Rust-native UI toolkit, still in early stages. Its main goal is performance, also aiming for small binary size and compile time, fast startup, and very easy build configuration (just cargo run). It is currently supporting Windows and macOS, with hope to support more in the future.",
    "docs": null,
    "tags": [
      "piet"
    ]
  },
  "KAS": {
    "crates_io": "https://crates.io/crates/KAS",
    "repo": "https://github.com/dhardy/kas",
    "description": "The toolKit Abstraction System leverages generics and macros to compose widgets with encapsulated user data, provides a powerful event-handling model and scales to at least 100'000 widgets per window.",
    "docs": "https://docs.rs/kas",
    "tags": [
      "winit",
      "WebGPU",
      "proc-macro"
    ]
  },
  "GTK": {
    "crates_io": "https://crates.io/crates/GTK",
    "repo": "https://github.com/gtk-rs/gtk",
    "description": "Rust bindings and wrappers for GLib, GDK 3, GTK+ 3 and Cairo.",
    "docs": "https://gtk-rs.org/docs-src/",
    "tags": [
      "Bindings",
      "GTK"
    ]
  },
  "sciter-rs": {
    "crates_io": "https://crates.io/crates/sciter-rs",
    "repo": "https://github.com/sciter-sdk/rust-sciter",
    "description": "Rust bindings for Sciter - Embeddable HTML/CSS/script engine (cross-platform desktop GUI toolkit). Also capable with DirectX / OpenGL.",
    "docs": "https://docs.rs/sciter-rs",
    "tags": [
      "HTML",
      "CSS"
    ]
  },
  "fltk": {
    "crates_io": "https://crates.io/crates/fltk",
    "repo": "https://github.com/MoAlyousef/fltk-rs",
    "description": "The FLTK crate is a crossplatform lightweight gui library which can be linked to statically to produce small, self-contained and fast binaries",
    "docs": "https://docs.rs/crate/fltk/0.1.4",
    "tags": [
      "Bindings",
      "FLTK"
    ]
  },
  "imgui-rs": {
    "crates_io": "https://crates.io/crates/imgui-rs",
    "repo": "https://github.com/Gekkio/imgui-rs",
    "description": "IMGUI-RS provides Rust bindings for IMGUI, a bloat-free intermediate mode GUI library for C/C++.\n\nIMGUI outputs vertex buffers that you can render in your 3D-pipeline enabled application. It is fast, portable, renderer agnostic and self-contained.\n\nIMGUI does away with state synchronization by requiring the application to explicitly pass all state required in real-time. The user interface only retains the minimal amount of state required to facilitate the functionality required by each type of widget supported by the system.\n",
    "docs": "https://docs.rs/imgui",
    "tags": [
      "Immediate mode API",
      "Bindings"
    ]
  },
  "WebRender": {
    "crates_io": "https://crates.io/crates/WebRender",
    "repo": "https://github.com/servo/webrender",
    "description": "A GPU accelerated 2D renderer for web content",
    "docs": "https://doc.servo.org/webrender/index.html",
    "tags": [
      "WebRender"
    ]
  },
  "core-foundation": {
    "crates_io": "https://crates.io/crates/core-foundation",
    "repo": "https://github.com/servo/core-foundation-rs",
    "description": "Bindings to Core Foundation for macOS",
    "docs": "https://docs.rs/core-foundation/0.6.4/core_foundation/",
    "tags": [
      "MacOS"
    ]
  },
  "qmetaobject": {
    "crates_io": "https://crates.io/crates/qmetaobject",
    "repo": "https://github.com/woboq/qmetaobject-rs",
    "description": "Expose rust object to Qt and QML.",
    "docs": null,
    "tags": [
      "Bindings",
      "Qt",
      "QML"
    ]
  },
  "Conrod": {
    "crates_io": "https://crates.io/crates/Conrod",
    "repo": "https://github.com/pistondevelopers/conrod.git",
    "description": "An easy-to-use, 100% Rust, extensible 2D GUI library.",
    "docs": "http://docs.piston.rs/conrod/conrod/",
    "tags": [
      "Immediate mode API"
    ]
  },
  "neutrino": {
    "crates_io": "https://crates.io/crates/neutrino",
    "repo": "https://github.com/alexislozano/neutrino",
    "description": "A GUI frontend in Rust based on web-view",
    "docs": "https://docs.rs/neutrino",
    "tags": []
  },
  "relm": {
    "crates_io": "https://crates.io/crates/relm",
    "repo": "https://github.com/antoyo/relm",
    "description": "Asynchronous, GTK+-based, GUI library, inspired by Elm, written in Rust",
    "docs": "https://docs.rs/relm/",
    "tags": [
      "Bindings",
      "GTK"
    ]
  }
}
