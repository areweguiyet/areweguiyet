[
  {
    "name": "gtk_comfy",
    "description": "Gtk Comfy allows you to use any serde format to declare a GTK interface",
    "docs": "https://docs.rs/gtk_comfy/latest/gtk_comfy/",
    "tags": [
      "GTK"
    ]
  },
  {
    "name": "gladis",
    "docs": "https://docs.rs/gladis",
    "tags": [
      "GTK"
    ]
  },
  {
    "name": "flutter_rust_bridge",
    "docs": "https://github.com/fzyzcjy/flutter_rust_bridge",
    "tags": [
      "Bindings"
    ]
  },
  {
    "name": "Relm4",
    "tags": [
      "GTK",
      "Bindings",
      "MacOS",
      "CSS"
    ]
  },
  {
    "name": "Makepad",
    "repo": "https://github.com/makepad/makepad",
    "description": "Makepad is a new VR, web and native-rendering UI framework.",
    "tags": [
      "WebGPU"
    ]
  },
  {
    "name": "WinSafe",
    "description": "Win32 GUI and related APIs in safe, idiomatic Rust.",
    "docs": "https://docs.rs/winsafe",
    "tags": [
      "Bindings",
      "WinApi"
    ]
  },
  {
    "name": "fui-core",
    "description": "MVVM-oriented (properties, observable collections, bindings), ui! macro, multiplatform, renderer-agnostic, with styles.",
    "docs": "https://github.com/marek-g/rust-fui/blob/master/doc/SUMMARY.md",
    "tags": [
      "winit",
      "proc-macro"
    ]
  },
  {
    "name": "SixtyFPS",
    "skip_crates_io": true,
    "repo": "https://github.com/sixtyfpsui/sixtyfps",
    "description": "SixtyFPS is a toolkit to efficiently develop fluid graphical user interfaces for any display: embedded devices and desktop applications. It comes with a fast OpenGL renderer, a designer-friendly markup language and is written in Rust.",
    "docs": "https://docs.rs/sixtyfps/",
    "tags": [
      "proc-macro",
      "winit",
      "Embedded",
      "MacOS"
    ]
  },
  {
    "name": "native-windows-gui",
    "tags": [
      "Bindings",
      "proc-macro",
      "WinApi"
    ]
  },
  {
    "name": "iui",
    "tags": [
      "Bindings"
    ]
  },
  {
    "name": "lvgl",
    "docs": "https://github.com/rafaelcaricio/lvgl-rs",
    "tags": [
      "Bindings",
      "Embedded"
    ]
  },
  {
    "name": "egui",
    "description": "Highly portable immediate mode GUI library in pure Rust",
    "docs": "https://docs.rs/egui",
    "tags": [
      "Immediate mode API"
    ]
  },
  {
    "name": "imgui",
    "tags": [
      "Bindings",
      "Immediate mode API"
    ]
  },
  {
    "name": "tauri",
    "skip_crates_io": true,
    "repo": "https://github.com/tauri-apps/tauri",
    "description": "Tauri is a framework for building tiny, blazing fast binaries for all major desktop platforms.",
    "docs": "https://tauri.studio/en/",
    "tags": [
      "HTML",
      "MacOS",
      "GTK"
    ]
  },
  {
    "name": "vgtk",
    "tags": [
      "GTK"
    ]
  },
  {
    "name": "conrod-core",
    "tags": [
      "Immediate mode API"
    ]
  },
  {
    "name": "qt_widgets",
    "description": "Ritual Qt bindings",
    "docs": "https://rust-qt.github.io/qt/",
    "tags": [
      "Bindings",
      "Qt"
    ]
  },
  {
    "name": "fltk",
    "description": "The FLTK crate is a crossplatform lightweight gui library which can be linked to statically to produce small, self-contained and fast binaries",
    "tags": [
      "Bindings",
      "FLTK"
    ]
  },
  {
    "name": "KAS",
    "description": "The toolKit Abstraction System leverages generics and macros to compose widgets with encapsulated user data, provides a powerful event-handling model and scales to at least 100'000 widgets per window.",
    "docs": "https://docs.rs/kas",
    "tags": [
      "winit",
      "WebGPU",
      "proc-macro"
    ]
  },
  {
    "name": "Iced",
    "description": "A renderer-agnostic GUI library for Rust focused on simplicity and type-safety. Inspired by Elm.",
    "tags": []
  },
  {
    "name": "core-foundation",
    "docs": "https://docs.rs/core-foundation/",
    "tags": [
      "Bindings",
      "MacOS"
    ]
  },
  {
    "name": "cacao",
    "docs": "https://docs.rs/cacao/",
    "tags": [
      "MacOS",
      "iOS"
    ]
  },
  {
    "name": "sciter-rs",
    "tags": [
      "HTML",
      "CSS"
    ]
  },
  {
    "name": "Azul",
    "tags": [
      "WebRender"
    ]
  },
  {
    "name": "WebRender",
    "docs": "https://doc.servo.org/webrender/index.html",
    "tags": [
      "WebRender"
    ]
  },
  {
    "name": "druid",
    "description": "Druid is an experimental Rust-native UI toolkit. Its main goal is to offer a polished user experience. There are many factors to this goal, including performance, a rich palette of interactions (hence a widget library to support them), and playing well with the native platform.",
    "tags": [
      "piet"
    ]
  },
  {
    "name": "OrbTk",
    "description": "The Orbital Widget Toolkit is a multi platform (G)UI toolkit for building scalable user interfaces with the programming language Rust. It's based on the Entity Component System Pattern and provides a functional-reactive API.",
    "tags": []
  },
  {
    "name": "rust-qt-binding-generator",
    "tags": [
      "Bindings",
      "Qt",
      "QML"
    ]
  },
  {
    "name": "qmetaobject-rs",
    "description": "A framework empowering everyone to create Qt/QML applications with Rust. It does so by building QMetaObjects at compile time, registering QML types (optionally via exposing QQmlExtensionPlugins) and providing idiomatic wrappers.",
    "docs": "https://docs.rs/qmetaobject/",
    "tags": [
      "proc-macro",
      "Bindings",
      "Qt",
      "QML"
    ]
  },
  {
    "name": "relm",
    "tags": [
      "Bindings",
      "GTK"
    ]
  },
  {
    "name": "GTK",
    "description": "Rust bindings and wrappers for GLib, GDK 3, GTK+ 3 and Cairo.",
    "docs": "https://gtk-rs.org/docs-src/",
    "tags": [
      "Bindings",
      "GTK"
    ]
  }
]